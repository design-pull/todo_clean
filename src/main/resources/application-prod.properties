# ===================================
# プロダクション環境専用設定ファイル
# ===================================
# このファイルは spring.profiles.active=prod が指定されたときのみ読み込まれる
# application.properties の設定を上書きまたは追加する

# ===================================
# Thymeleaf テンプレートエンジン設定
# ===================================

# Thymeleaf テンプレートのキャッシュを有効化
# true: プロダクションではパフォーマンス向上のためキャッシュを有効化
# false: 開発環境ではテンプレートの変更を即座反映させるため無効化
spring.thymeleaf.cache=true

# ===================================
# HTTP レスポンス圧縮設定
# ===================================

# HTTP レスポンスの圧縮を有効化
# ネットワーク転送量を削減してページ読み込み速度を向上
server.compression.enabled=true

# 圧縮対象の MIME タイプを指定
# text/html: HTML ファイルを圧縮
# text/css: CSS ファイルを圧縮
# application/javascript: JavaScript ファイルを圧縮
server.compression.mime-types=text/html,text/css,application/javascript

# ===================================
# JPA/Hibernate パフォーマンス最適化
# ===================================

# SQLクエリのコンソール出力を無効化
# false: プロダクションではパフォーマンスとセキュリティのため無効化
# true: 開発環境ではデバッグのため有効化することが多い
spring.jpa.show-sql=false

# Hibernate の DDL 自動実行を無効化
# none: プロダクションではデータベーススキーマの自動変更を禁止
# create: アプリ起動時にテーブルを再作成（開発環境）
# create-drop: アプリ終了時にテーブルを削除（テスト環境）
# update: エンティティの変更に合わせてテーブルを更新（非推奨）
spring.jpa.hibernate.ddl-auto=none

# ===================================
# セッションセキュリティ強化
# ===================================

# セッションCookieのSecureフラグを有効化
# true: HTTPS 接続でのみ Cookie を送信（プロダクション環境）
# false: HTTP 接続でも Cookie を送信（開発環境）
server.servlet.session.cookie.secure=true

# セッションCookieのHttpOnlyフラグを有効化
# true: JavaScript からの Cookie アクセスを禁止（XSS 攻撃対策）
# false: JavaScript からの Cookie アクセスを許可（非推奨）
server.servlet.session.cookie.http-only=true